// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  angular.module('newBetaApp').controller('LineCtrl', [
    '$scope', '$q', 'team', 'lineStats', 'LineView', 'filter', 'viewer', function($scope, $q, team, lineStats, LineView, filter, viewer) {
      var scope;
      scope = $scope;
      scope.dragging;
      scope.includedGames = filter.included;
      $scope.loading = true;
      scope.lineViews = [];
      $scope._bind = _.bind;
      scope.lineViews.push(new LineView);
      if (viewer.isLargeScreen()) {
        scope.lineViews.push(new LineView);
      }
      _.each(scope.lineViews, function(lineView) {
        return lineView.addLine();
      });
      scope.selectedLineView = _.first(scope.lineViews);
      $q.all([lineStats, team]).then(function(response) {
        filter.includeAll();
        team = response[1];
        lineStats = response[0];
        $scope.players = _.pluck(team.players, 'name');
        $scope.loading = false;
        $scope.teamStats = lineStats.getForTeam();
        return scope.selectedLineView.selectedLine.updateStats();
      });
      scope.$watchCollection('includedGames', function(update, old) {
        if (update && lineStats.getStats) {
          _(scope.lines).each(function(line) {
            return line.updateStats();
          });
          return $scope.teamStats = lineStats.getForTeam();
        }
      });
      scope.setDragging = function(player) {
        return scope.dragging = player;
      };
      scope.addPlayerToSelected = function(player) {
        return scope.selectedLineView.selectedLine.addPlayer(player);
      };
      scope.isSelectedLineView = function(lineView) {
        return scope.selectedLineView === lineView;
      };
      scope.selectLineView = function(lineView) {
        scope.selectedLineView = lineView;
        return lineView.selectedLine.updateStats();
      };
      scope._keys = _.keys;
      scope._contains = _.contains;
      scope.isNumber = function(item) {
        return typeof item === 'number';
      };
      return scope.floor = Math.floor;
    }
  ]);

}).call(this);
